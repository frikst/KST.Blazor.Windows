@page "/window-list"
@implements IDisposable
@attribute [Example("Window list")]
@inject IWindowManagement WindowManagement

<h3>Window list</h3>

@if (this.WindowManagement.Windows.Any())
{
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Component type</th>
                <th>Screen</th>
                <th>Position</th>
                <th>Outer size</th>
                <th>Inner size</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var window in this.WindowManagement.Windows)
            {
                <tr>
                    <td>@window.Id</td>
                    <td>@window.Title</td>
                    <td><code>@window.ComponentType.FullName</code></td>
                    <td>@window.Boundaries.Screen.Left, @window.Boundaries.Top</td>
                    <td>@window.Boundaries.Left, @window.Boundaries.Top</td>
                    <td>@window.Boundaries.Width &times; @window.Boundaries.Height</td>
                    <td>@window.Boundaries.InnerWidth &times; @window.Boundaries.InnerHeight</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="alert alert-primary" role="alert">No window opened yet</p>
}

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();

        this.WindowManagement.WindowsChanged += OnWindowsChanged;
    }

    private void OnWindowsChanged(object? sender, EventArgs e)
    {
        this.StateHasChanged();
    }

    public void Dispose()
    {
        this.WindowManagement.WindowsChanged -= OnWindowsChanged;
    }
}