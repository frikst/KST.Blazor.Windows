@page "/counter"

<h1>Counter</h1>

<p>Current count: @currentCount</p>

@if (this.CurrentWindow is IWindow window)
{
    <p>I'm in window with GUID @window.Id</p>
}

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="btn btn-primary" @onclick="OpenWindow">Open</button>
<button class="btn btn-primary" @onclick="OpenTab">Open as tab</button>

@code {
    [Inject]
    public IWindowManagement WindowManagement { get; set; }

    [CascadingParameter]
    public IWindow CurrentWindow { get; set; }

    [Parameter]
    public int Start { get; set; }
        = 0;

    private int currentCount = 0;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        this.currentCount = this.Start;
    }

    private void IncrementCount()
    {
        currentCount++;
    }

    private async Task OpenWindow()
    {
        await this.WindowManagement.OpenWindow<Counter>(new NewWindowOptions() { Title = "Counter" }, new Dictionary<string, object> { { nameof(Start), currentCount } });
    }

    private async Task OpenTab()
    {
        await this.WindowManagement.OpenWindow<Counter>(NewWindowOptions.AsTab with{ Title = "Counter"}, new Dictionary<string, object> { { nameof(Start), currentCount } });
    }

}
